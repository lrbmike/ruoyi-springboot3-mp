package ${packageName}.controller;

import jakarta.annotation.Resource;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.security.access.prepost.PreAuthorize;

import com.ruoyi.common.core.plus.response.Result;
import com.ruoyi.common.core.plus.response.ResultUtil;
import com.ruoyi.common.core.plus.dto.common.CommonDataPageResponse;
import com.ruoyi.common.core.plus.response.StatusResponse;

import ${packageName}.domain.vo.${ClassName}Vo;
import ${packageName}.business.${ClassName}Business;

/**
 * ${functionName}控制器
 * 
 * @author ${author}
 * @date ${datetime}
 */
@RestController
@RequestMapping("/${moduleName}/${businessName}")
public class ${ClassName}Controller {

    @Resource
    ${ClassName}Business business;

    /**
     * 分页查询${functionName}列表
     */
    @PreAuthorize("@ss.hasPermi('${permissionPrefix}:list')")
    @PostMapping("/page")
    public Result page(@RequestBody ${ClassName}Vo vo) {
        CommonDataPageResponse<${ClassName}Vo> response = business.page(vo);

        return ResultUtil.success(response);
    }

    /**
     * 获取${functionName}详细信息
     */
    @PreAuthorize("@ss.hasPermi('${permissionPrefix}:query')")
    @PostMapping("/info")
    public Result info(@RequestBody ${ClassName}Vo vo) {

        ${ClassName}Vo info = business.info(vo);

        return ResultUtil.success(info);
    }

    /**
     * 新增${functionName}
     */
    @PreAuthorize("@ss.hasPermi('${permissionPrefix}:add')")
    @PostMapping("/add")
    public Result add(@RequestBody ${ClassName}Vo vo) {

        StatusResponse response = business.add(vo);
        if (response.getSuccess() == false) {
            return ResultUtil.fail(response.getMsg());
        }

        return ResultUtil.success(response);
    }

    /**
     * 修改${functionName}
     */
    @PreAuthorize("@ss.hasPermi('${permissionPrefix}:edit')")
    @PostMapping("/update")
    public Result update(@RequestBody ${ClassName}Vo vo) {

        StatusResponse response = business.update(vo);
        if (response.getSuccess() == false) {
            return ResultUtil.fail(response.getMsg());
        }

        return ResultUtil.success(response);
    }

    /**
     * 删除${functionName}
     */
    @PreAuthorize("@ss.hasPermi('${permissionPrefix}:remove')")
    @PostMapping("/delete")
    public Result delete(@RequestBody ${ClassName}Vo vo) {

        StatusResponse response = business.delete(vo);
        if (response.getSuccess() == false) {
            return ResultUtil.fail(response.getMsg());
        }

        return ResultUtil.success(response);
    }

}
